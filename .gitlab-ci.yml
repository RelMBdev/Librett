# Each gitlab batch runner is tied to a specific environment variable for the scheduler paramaters
# jlsebatch[1-2] - are generic batch executors and can be used for submitting to any JLSE system. They use JLSE_SCHEDULER_PARAMETERS

# This is a global before script it will be ran as the first part of each job
before_script:
  - echo "before script"

stages:
  - shell
  - arcticus
  - v100
  - mi100

# Shell executor will be executed like you are logged in directly to a JLSE login node
shell_executor:
  stage: shell
  needs: []
  tags:
    - shell
  script:
    - id
    - hostname
    - echo "Running on $(hostname) with setuid shell runner"

# Arcticus using Generic batch executor  
arcticus:
  variables:
    JLSE_SCHEDULER_PARAMETERS: "-n 1  -t 30 -q arcticus"
  stage: arcticus
  needs: []
  tags:
    - batch
  script:
    - echo "SYCL test start"
    - id
    - hostname
    - echo "Running on $(hostname) with setuid batch runner on arcticus with generic batch"
    - module load oneapi
    - module load cmake
    - echo "Compilation of performance variant"
    - make clean
    - make sycl option=-DPERFTEST
    - echo "Run performance test"
    - time bin/librett_test
    - echo "Compilation of full code"
    - make clean
    - make sycl
    - echo "Run full test"
    - time bin/librett_test
    - echo "Compilation by using CMake"
    - make clean
    - cmake -H. -Bbuild -DENABLE_SYCL=ON -DCMAKE_CXX_COMPILER=icpx
    - cd build; make; make librett_test; make librett_bench; make example
    - echo "Run quick test"
    - time src/example
    - echo "Run bench test"
    - time src/librett_bench -bench 3
    - echo "SYCL test end"

# V100 nodes using Generic batch executor  
v100:
  variables:
    JLSE_SCHEDULER_PARAMETERS: "-n 1  -t 30 -q gpu_v100_smx2_debug"
  stage: v100
  needs: ["arcticus"]
  tags:
    - batch
  script:
    - echo "CUDA test start"
    - id
    - hostname
    - echo "Running on $(hostname) with setuid batch runner on v100 with generic batch"
    - module load oneapi
    - module load cmake
    - module load cuda/11.2.0
    - export MPIR_CVAR_ENABLE_GPU=0
    - echo "Compilation of performance variant"
    - make clean
    - make cuda option=-DPERFTEST
    - echo "Run performance test"
    - time bin/librett_test
    - echo "Compilation of full code"
    - make clean
    - make cuda
    - echo "Run full test"
    - time bin/librett_test
    - echo "Compilation by using CMake"
    - make clean
    - cmake -H. -Bbuild -DENABLE_CUDA=ON -DCMAKE_CUDA_ARCHITECTURES=70
    - cd build; make; make librett_test; make librett_bench; make example
    - echo "Run quick test"
    - time src/example
    - echo "Run bench test"
    - time src/librett_bench -bench 3
    - echo "CUDA test end"

# MI100 nodes using Generic batch executor  
mi100:
  variables:
    JLSE_SCHEDULER_PARAMETERS: "-n 1  -t 30 -q gpu_amd_mi100"
  stage: mi100
  needs: ["v100"]
  tags:
    - batch
  script:
    - echo "HIP test start"
    - id
    - hostname
    - echo "Running on $(hostname) with setuid batch runner on mi100 with generic batch"
    - export MPIR_CVAR_ENABLE_GPU=0
    - echo "Compilation of performance variant"
    - make clean
    - make hip option=-DPERFTEST
    - echo "Run performance test"
    - time bin/librett_test
    - echo "Compilation of full code"
    - make clean
    - make hip
    - echo "Run full test"
    - time bin/librett_test
    - echo "Compilation by using CMake"
    - make clean
    - cmake -H. -Bbuild -DENABLE_HIP=ON -DCMAKE_CXX_COMPILER=hipcc
    - cd build; make; make librett_test; make librett_bench; make example
    - echo "Run quick test"
    - time src/example
    - echo "Run bench test"
    - time src/librett_bench -bench 3
    - echo "HIP test end"

# afer script to be executed after each job
after_script:
  - echo "after script"
